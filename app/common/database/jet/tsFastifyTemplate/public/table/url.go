//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var URL = newURLTable("public", "url", "")

type uRLTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	URL       postgres.ColumnString
	UpdatedAt postgres.ColumnTimestampz
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type URLTable struct {
	uRLTable

	EXCLUDED uRLTable
}

// AS creates new URLTable with assigned alias
func (a URLTable) AS(alias string) *URLTable {
	return newURLTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new URLTable with assigned schema name
func (a URLTable) FromSchema(schemaName string) *URLTable {
	return newURLTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new URLTable with assigned table prefix
func (a URLTable) WithPrefix(prefix string) *URLTable {
	return newURLTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new URLTable with assigned table suffix
func (a URLTable) WithSuffix(suffix string) *URLTable {
	return newURLTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newURLTable(schemaName, tableName, alias string) *URLTable {
	return &URLTable{
		uRLTable: newURLTableImpl(schemaName, tableName, alias),
		EXCLUDED: newURLTableImpl("", "excluded", ""),
	}
}

func newURLTableImpl(schemaName, tableName, alias string) uRLTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		URLColumn       = postgres.StringColumn("url")
		UpdatedAtColumn = postgres.TimestampzColumn("updatedAt")
		CreatedAtColumn = postgres.TimestampzColumn("createdAt")
		allColumns      = postgres.ColumnList{IDColumn, URLColumn, UpdatedAtColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{URLColumn, UpdatedAtColumn, CreatedAtColumn}
	)

	return uRLTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		URL:       URLColumn,
		UpdatedAt: UpdatedAtColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
